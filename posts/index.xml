<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Greeting.</title>
        <link>https://eterlan.github.io/posts/</link>
        <description>Recent content in Posts on Greeting.</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Thu, 20 Jun 2019 11:28:25 +0800</lastBuildDate>
        <atom:link href="https://eterlan.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Hugo踩坑记</title>
            <link>https://eterlan.github.io/posts/2019/06/hugo%E8%B8%A9%E5%9D%91%E8%AE%B0/</link>
            <pubDate>Thu, 20 Jun 2019 11:28:25 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/hugo%E8%B8%A9%E5%9D%91%E8%AE%B0/</guid>
            <description>与Hexo不同，Hexo提供的 hexo g -d集生成发布于一体，而Hugo需要手动push仓库，这让我等对git不了解的同学可谓摔得鼻青脸肿。当然这也是一个很好的学习机会，洒家这就把埋地雷的地区给标记出来。
前面的安装那些流程就不多说了，教学很多，关键是几个易错的地方。
 下载好Hugo，新建存放源文件的文件夹。
hugo new site /foldername `
 从网上下载了主题后，将主题里的config.toml1复制到新建的文件夹里。注意一定要修改其中的，不然会丢失其中的
 脚本。网上的脚本千奇百怪，有每次都删除，然后重置仓库的。如果不用个人域名倒也没什么，问题是每次都清空仓库，会导致CNAME文件被删除，也就是指向个人域名的文件丢失。经过一番思考，还是使用官方脚本为妙，把public文件夹作为一个submodule，每次更新直接push到username.github.io这个仓库即可。
 添加个人域名后，由于在github操作，添加了CNAME文件，导致无法执行脚本。根本原因是submodule。submodule相当于在一个仓库里面另外储存了一个仓库。当我们在github上修改了username.github.io的时候，由于本地端与github端的hash值不同，导致push失败。解决办法其实很简单，pull下来再使用脚本即可。
# 博客中的submodule文件夹，public cd public # 先把云端的改动pull下来，也就是之前在github上添加的CNAME文件 git pull # if (之前commit失败过，那么重新commit) # git commit -m &amp;#34;After pull CNAME&amp;#34; # 回到上一级，并运行脚本 cd .. ./d.sh  成功使自定义域名指向个人博客后，如果出现一些样式的小问题，也许这样可以解决。修改config.toml文件中的canonifyURLs = false2。似乎跟https无法加载某些资源有关。
 yaml1的解析问题。key:后面必须跟1个空格，不多也不少，必须一个。汉字符号更别提了。
 额外提一下，注册域名的话.com一年只需要小几十块，相当便宜。目前正在腾讯云，还挺不错的。单纯使用国内域名注册商提供的域名，而不用服务器的话是不用备案的，只需实名认证即可。
​
  P.s. 官方的Deploy至Github Pages的教学以及d.sh脚本
GitHub User or Organization Pages
#!/bin/bash  echo -e &amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34; cd blog # Build the project.</description>
            <content type="html"><![CDATA[<p>与Hexo不同，Hexo提供的 <code>hexo g -d</code>集生成发布于一体，而Hugo需要手动push仓库，这让我等对git不了解的同学可谓摔得鼻青脸肿。当然这也是一个很好的学习机会，洒家这就把埋地雷的地区给标记出来。</p>

<hr />

<p>前面的安装那些流程就不多说了，教学很多，关键是几个易错的地方。</p>

<ol>
<li><p>下载好Hugo，新建存放源文件的文件夹。</p>

<p>hugo new site /foldername `</p></li>

<li><p>从网上下载了主题后，将主题里的<code>config.toml</code><sup class="footnote-ref" id="fnref:1"><a href="#fn:1">1</a></sup>复制到新建的文件夹里。注意一定要修改其中的，不然会丢失其中的</p></li>

<li><p>脚本。网上的脚本千奇百怪，有每次都删除，然后重置仓库的。如果不用个人域名倒也没什么，问题是每次都清空仓库，会导致CNAME文件被删除，也就是指向个人域名的文件丢失。经过一番思考，还是使用官方脚本为妙，把public文件夹作为一个submodule，每次更新直接push到username.github.io这个仓库即可。</p></li>

<li><p>添加个人域名后，由于在github操作，添加了CNAME文件，导致无法执行脚本。根本原因是submodule。submodule相当于在一个仓库里面另外储存了一个仓库。当我们在github上修改了username.github.io的时候，由于本地端与github端的hash值不同，导致push失败。解决办法其实很简单，pull下来再使用脚本即可。</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># 博客中的submodule文件夹，public</span> 
cd public
    
<span style="color:#75715e"># 先把云端的改动pull下来，也就是之前在github上添加的CNAME文件</span>
git pull 
    
<span style="color:#75715e"># if (之前commit失败过，那么重新commit)</span>
<span style="color:#75715e"># git commit -m &#34;After pull CNAME&#34;</span>
    
<span style="color:#75715e"># 回到上一级，并运行脚本</span>
cd ..
./d.sh
    </code></pre></div></li>

<li><p>成功使自定义域名指向个人博客后，如果出现一些样式的小问题，也许这样可以解决。修改<code>config.toml</code>文件中的<code>canonifyURLs = false</code><sup class="footnote-ref" id="fnref:2"><a href="#fn:2">2</a></sup>。似乎跟https无法加载某些资源有关。</p></li>

<li><p>yaml<sup class="footnote-ref" id="fnref:1"><a href="#fn:1">1</a></sup>的解析问题。key:后面必须跟1个空格，不多也不少，必须一个。汉字符号更别提了。</p></li>

<li><p>额外提一下，注册域名的话.com一年只需要小几十块，相当便宜。目前正在腾讯云，还挺不错的。单纯使用国内域名注册商提供的域名，而不用服务器的话是不用备案的，只需实名认证即可。</p>

<p>​</p></li>
</ol>

<hr />

<p>P.s. 官方的Deploy至Github Pages的教学以及<code>d.sh</code>脚本</p>

<p><a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/#github-user-or-organization-pages" target="_blank">GitHub User or Organization Pages</a></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
echo -e <span style="color:#e6db74">&#34;\033[0;32mDeploying updates to GitHub...\033[0m&#34;</span>

cd blog
<span style="color:#75715e"># Build the project.</span>
hugo <span style="color:#75715e"># if using a theme, replace with `hugo -t &lt;YOURTHEME&gt;`</span>

<span style="color:#75715e"># Go To Public folder</span>
cd public
<span style="color:#75715e"># Add changes to git.</span>
git add .

<span style="color:#75715e"># Commit changes.</span>
msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;rebuilding site `date`&#34;</span>
<span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> $# -eq <span style="color:#ae81ff">1</span> <span style="color:#f92672">]</span>
  <span style="color:#66d9ef">then</span> msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>
git commit -m <span style="color:#e6db74">&#34;</span>$msg<span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># Push source and build repos.</span>
git push origin master

<span style="color:#75715e"># Come Back up to the Project Root</span>
cd ..</code></pre></div><div class="footnotes">

<hr />

<ol>
<li id="fn:1">toml是一种语言，一般用于暴露数据给用户，以便于其修改。Hugo支持三种语言声明markdown文件的元数据（如作者时间等信息），分别是yaml、toml、和json。
 <a class="footnote-return" href="#fnref:1"><sup>[return]</sup></a></li>
<li id="fn:2">避免使用绝对路径。
 <a class="footnote-return" href="#fnref:2"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
        </item>
        
        <item>
            <title>ECS 单元测试教学</title>
            <link>https://eterlan.github.io/posts/2019/06/ecs-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%95%99%E5%AD%A6/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/ecs-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%95%99%E5%AD%A6/</guid>
            <description>网上的教学视频有些过时，因此想写一个新的教学，教大家如何对自己的ECS代码进行单元测试。
第一步 打开Unity单元测试的界面 位于Window/General/TestRunner。
第二步 建立TestFolder 位于Assets/Create/Test/Test Assembly Folder
FAQ：
 为什么要用asmdef？  我们只希望测试这一小片代码，因此不希望每次测试都让unity重新编译其他部分，因此只添加几个测试需要的依赖文件，这样可以让测试跑的很快。
 为什么要勾上Test Assemblies？  这样可以在打包时忽略这块代码，范围是该文件夹以内的代码。
 为什么只勾上Editor？  因为我们只在编辑器内需要这块代码。
 写好待测试的系统system与组件component  这里待测试的是ref关键字能否作用到嵌套struct中的内容。
system using Unity.Entities; public class UpdateNestedStruct : ComponentSystem { protected override void OnUpdate() { Entities.ForEach((ref T t) =&amp;gt; { t.point.X += 1; t.forTest += 1; }); } } component using System; using Unity.Entities;[Serializable] public struct T : IComponentData { public Point point; public int forTest; } public struct Point { public int X; public int Y; } 写单元测试 准备工作 翻一翻源码，可以看到Unity自个儿的单元测试是继承自ECSTestFixture，其目的是做一些准备工作。我们也有样学样，否则的话World 和 EntityManager都是空值。</description>
            <content type="html"><![CDATA[

<p>网上的教学视频有些过时，因此想写一个新的教学，教大家如何对自己的ECS代码进行单元测试。</p>

<h3 id="第一步-打开unity单元测试的界面">第一步 打开Unity单元测试的界面</h3>

<p>位于Window/General/TestRunner。</p>

<h3 id="第二步-建立testfolder">第二步 建立TestFolder</h3>

<p>位于Assets/Create/Test/Test Assembly Folder</p>

<p>FAQ：</p>

<ol>
<li>为什么要用asmdef？</li>
</ol>

<p>我们只希望测试这一小片代码，因此不希望每次测试都让unity重新编译其他部分，因此只添加几个测试需要的依赖文件，这样可以让测试跑的很快。</p>

<ol>
<li>为什么要勾上Test Assemblies？</li>
</ol>

<p>这样可以在打包时忽略这块代码，范围是该文件夹以内的代码。</p>

<ol>
<li>为什么只勾上Editor？</li>
</ol>

<p>因为我们只在编辑器内需要这块代码。</p>

<ol>
<li>写好待测试的系统system与组件component</li>
</ol>

<p>这里待测试的是ref关键字能否作用到嵌套struct中的内容。</p>

<h4 id="system">system</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> Unity.Entities;

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateNestedStruct</span> : ComponentSystem
{
    <span style="color:#66d9ef">protected</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> OnUpdate()
    {
        Entities.ForEach((<span style="color:#66d9ef">ref</span> T t) =&gt;
        {
            t.point.X += <span style="color:#ae81ff">1</span>;
            t.forTest += <span style="color:#ae81ff">1</span>;
        });
    }
}</code></pre></div>
<h4 id="component">component</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> System;
<span style="color:#66d9ef">using</span> Unity.Entities;<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">[Serializable]</span>
<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">T</span> : IComponentData
{
    <span style="color:#66d9ef">public</span> Point point;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> forTest;
}

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Point</span>
{
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> X;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> Y;
}</code></pre></div>
<h3 id="写单元测试">写单元测试</h3>

<h4 id="准备工作">准备工作</h4>

<p>翻一翻源码，可以看到Unity自个儿的单元测试是继承自ECSTestFixture，其目的是做一些准备工作。我们也有样学样，否则的话World 和 EntityManager都是空值。</p>

<p>一翻尝试之后，发现无法直接继承或者是调用Unity.Entities.Test这个库。解决办法是把ECSTestsFixture和TestComponent从Unity.Entities.Test中复制到自己的测试文件夹。</p>

<h4 id="手动update自己的系统">手动Update自己的系统</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> NUnit.Framework;<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">[TestFixture]</span>
<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateNestedStructTests</span> : ECSTestsFixture
{<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _0_Update_Normal_Var()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(T));

        World.GetOrCreateSystem&lt;UpdateNestedStruct&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetComponentData&lt;T&gt;(entity).forTest;
        Assert.AreEqual(<span style="color:#ae81ff">1</span>,target);
    }<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _1_Update_Nested_Struct()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(T));
        
        World.GetOrCreateSystem&lt;UpdateNestedStruct&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetComponentData&lt;T&gt;(entity).point.X;
        Assert.AreEqual(<span style="color:#ae81ff">1</span>,target);
    }
}</code></pre></div>
<p>写好测试，我们回到编辑器，选中需要测试的代码，并点击Run Selected。</p>

<p>这样我们就写好一个ECS专用的单元测试了！</p>

<p>可以看到，手动更新系统的方式，让ECS与笨重的MonoBehaviour的测试方式区别很大。这让我们可以随意地测试每小块代码。</p>

<h3 id="reference">reference</h3>

<ul>
<li>5argon
<a href="https://medium.com/@5argon/unity-ecs-unit-testing-problems-with-ecs-8f31c7a37386" target="_blank">https://medium.com/@5argon/unity-ecs-unit-testing-problems-with-ecs-8f31c7a37386</a></li>
<li>infallible
<a href="https://www.youtube.com/watch?v=Ibj7O_fQXKs" target="_blank">https://www.youtube.com/watch?v=Ibj7O_fQXKs</a></li>
<li>Discuss
<a href="https://forum.unity.com/threads/how-to-unit-test-where-is-the-unity-entities-tests-namespace.540251/" target="_blank">https://forum.unity.com/threads/how-to-unit-test-where-is-the-unity-entities-tests-namespace.540251/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>GameStoryWeek2</title>
            <link>https://eterlan.github.io/posts/2019/06/gamestoryweek2/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/gamestoryweek2/</guid>
            <description>Instruction Pick a popular story or film that you are very familiar with. You are encouraged to use the same story or film you used in the Week 1 assignment. If not, you may choose a new film or story, but pick one you need not watch again for the purposes of this assignment. For this assignment, you are asked to begin fleshing out your selected film or story into a more detailed description for a possible game.</description>
            <content type="html"><![CDATA[

<h2 id="instruction">Instruction</h2>

<p>Pick a popular story or film that you are very familiar with. You are encouraged to use the same story or film you used in the Week 1 assignment. If not, you may choose a new film or story, but pick one you need not watch again for the purposes of this assignment.
For this assignment, you are asked to begin fleshing out your selected film or story into a more detailed description for a possible game. You must include the following:</p>

<ul>
<li>The Spine (logline) of the story, updated from last week.Story Synopsis of the film (200-400 words). <strong>Try to hit all 8 points of a good synopsis.</strong></li>
<li><strong>Character Brief for the protagonist AND the antagonist</strong> of your story (100-300 words each). Try to hit all <strong>6 points of what makes a good character description in each brief</strong>.</li>
<li>Though it isn’t covered this week, you are also welcome to submit a Setting Description (100-300 words) but this is optional. For now, feel free to outline the primary locations (2-3 maximum) where the story’s action takes place, and how a character would travel from one to the next.
Write all four components (spine, synopsis, and two character briefs) directly in each submission window. Include the Setting Description if you decide to complete it.</li>
</ul>

<p>Use the title of the story or film as your project title, and submit!</p>

<h2 id="review">Review</h2>

<h3 id="story-synopsis-points">Story Synopsis Points</h3>

<p>With a simple game, we can have a shorter and more direct story synopsis. In the case of Angry Birds, it becomes more about defining the overall world and story theme in the game. Understanding how we can put a story synopsis around Angry Birds will help you identify how to create a story description for other “simple” arcade skills-based games or begin to establish the basis for more complex games.
<strong>To review, did you see the following eight points made in the StarCraft II story synopsis?</strong></p>

<ul>
<li><p>[x] Where are we; where/when does the story take place?</p></li>

<li><p>[x] Who are we following in the story (the protagonist) and why them?</p></li>

<li><p>[x] Who or what force is opposed to the hero of the story, and why are they in - opposition (the antagonist)?</p></li>

<li><p>[x] What do these characters want to accomplish; what is at stake for them?</p></li>

<li><p>[x] What is the ensuing conflict, and why does it exist?</p></li>

<li><p>[x] How does the action rise; how do things get more tense?</p></li>

<li><p>[x] What is the final crisis, and how does it play out?</p></li>

<li><p>[x] How do things resolve and wrap up?</p></li>
</ul>

<h3 id="about-character-briefs">About Character Briefs</h3>

<p>Understanding who your characters are is important to understanding your story and your game. In this lecture, we will take a closer look at the primary characters in StarCraft II: Wings of Liberty and break down their characters as exercise. Namely, we&rsquo;ll be making character lists and character briefs to describe who is in the story and what they do.<br />
<strong>To create your character briefs keep the following six points in mind:</strong></p>

<ul class="task-list">
<li><label><input type="checkbox" checked disabled class="task-list-item"> Who is he/she? Are they a primary or secondary character and how do they relate to the game story?</label></li>
<li><label><input type="checkbox" checked disabled class="task-list-item"> What do they look like? What are they wearing or carrying with them?</label></li>
<li><label><input type="checkbox" checked disabled class="task-list-item"> What is their personality like and how does that personality help fulfill their role in the game story?</label></li>
<li><label><input type="checkbox" checked disabled class="task-list-item"> How do they relate to other characters in the game?</label></li>
<li><label><input type="checkbox" checked disabled class="task-list-item"> What are their strengths and weaknesses, and how can that affect the game story?</label></li>
<li><label><input type="checkbox" checked disabled class="task-list-item"> What are the motivating character goals for this character?</label></li>
</ul>

<h3 id="about-setting-descriptions">About Setting Descriptions</h3>

<p>Just as listing and describing your characters is important for a design document, so is presenting your settings and environments.
In these examples, we will take a closer look at the primary settings that we will include in our Game Design Document later. By outlining these ideas and settings in written form, we&rsquo;ll learn how the game creator can aid the designers and give a better overview of the world to readers of the Game Design document.
<strong>Create your settings description briefs with the following points in mind:</strong></p>

<ul>
<li>Where are we?</li>
<li>What does this place have to do with the game story?</li>
<li>How does this place relate to the characters?</li>
<li>Where did we come from and where does this place lead?</li>
<li>What does this setting look like?</li>
</ul>

<h2 id="week1assignment">Week1Assignment</h2>

<p><a href="http://www.1993s.top/detail/1742.html" target="_blank">网络迷踪</a>
拍摄时间只有13天，烂番茄9.3</p>

<h2 id="searching-网络迷踪">Searching 网络迷踪</h2>

<hr />

<ul>
<li><p>The Spine (logline) of the story</p>

<ul>
<li>Life in the United States, a high IQ, Korean father strive to find his missing daughter, with an agent who is the mother of the criminal. The agent try to misled him again and again, even assign another criminal convicted. However the father find his daughter through searching on google after her missing five days. Eventually, father and daughter reunion, agents and her son pay a price for their crime.</li>
</ul></li>

<li><p>A breakdown of the story into three acts. Your answer should consist of three paragraphs describing the actions of each act and how they rise and culminate to a resolution. (200-400 words)</p></li>
</ul>

<ol>
<li><p>A Korean and his family lived happily and happily in the United States, but the disease suddenly took his wife away. Since then, his relationship with his daughter seems to be only superficial, but he did not realize it. Every week she lied to go to the piano class and cheated $100 from him. That day she said that she would attend a biological study group for the whole night, and she left at nine. After this day, she disappeared.</p></li>

<li><p>He tried every means to find his daughter&rsquo;s friend, but he found nothing, because she has no real friends. After some useless work, the father called the police. The female police officer who came to help him thought that her daughter’s departure was beacuse of religious organization, and the various evidences seemed to prove this. Every week, $100 was transferred to an anonymous account, no real friends, but one online. Over time, the new clues overturned the previous &ldquo;evidence&rdquo;. In this way, the relationship between the protagonist and the female police officer was also improved. Until he found the female police officer was always lying, and her wrong judgments, the protagonist learned the truth - the female police officer in order to defend the son who was the murder, took the risk, took the initiative to take the lead to mislead the protagonist, trying to cover up her son.</p></li>

<li><p>After discovering that the source of everything started after the female detective deliberately misled, the protagonist immediately called the police and concluded that the daughter was still waiting for the rescue at that place. After some search and rescue, her daughter was rescued. The female police officer and her son were put in jail and accepted the punishment they deserved.</p></li>
</ol>

<ul>
<li>A statement that describes your interest to this story/movie, or rather: Why does this story matter to you?<br />

<ul>
<li>表现形式十分新颖，不同于传统的电影，该剧90%的镜头都对着主角的电脑画面，这也反映了现代人的生活方式。剧情设计扑朔迷离，每次当我以为编剧是想反映某种社会问题时，电影突然又指向了另一条线索。反反复复的希望 - 破灭中，矛盾最终迎来了完满的解决。而且值得学习的是，每次另一条线索，在之前都会部一些微妙的暗子，因此每个转折并不显得突兀无理。</li>
</ul></li>
</ul>

<h2 id="week2assignment">Week2Assignment</h2>

<p><a href="http://www.1993s.top/detail/1742.html" target="_blank">网络迷踪</a>
拍摄时间只有13天，烂番茄9.3</p>

<h2 id="searching-网络迷踪-1">Searching 网络迷踪</h2>

<hr />

<ul>
<li><p>The Spine (logline) of the story</p>

<ul>
<li>在美国生活的一位高智商韩裔父亲，在一名身为探员的母亲为了维护犯罪的儿子而一次又一次地误导他，甚至安排犯人定罪的情况下，仍独自通过互联网寻找到了失踪了五天的女儿的故事，经历了种种，父女重修旧好，探员与她的儿子为他们的犯罪行为付出了代价。</li>
</ul></li>

<li><p>Story Synopsis</p>

<ul>
<li><strong>背景</strong>
相依为命都是的韩裔一家在美国过着快乐幸福的生活，但病魔突然带走了母亲。那之后，父女的关系似乎只是表面融洽，然而父亲并不了解女儿。每周100美元的钢琴课女儿一次都没去过。说是要参加一整晚的生物学习小组，结果九点就走了。这天之后，女儿失踪了。</li>
<li><strong>过程</strong>
父亲想尽各种办法寻找女儿的朋友，却一无所获，因为女儿线上的“朋友”似乎都只是萍水之交。一番无用功后，父亲选择了报警。前来帮助他的女警官认为，女儿的出走是参与了某种组织，而各种证据似乎也证明了这一点 —— 女儿每周谎称用作钢琴课的100美元转进了匿名账户，没有朋友以及和网上的一个可疑人物打得火热。然而随着时间推移，尽管新的线索又推翻了之前的“证据”，两人还是逐渐离事实真相越来越近，也慢慢熟络了起来。此时，一名有犯罪前科的人在网上声称对此次失踪事件负责，并表示杀害了示踪的女儿。案件似乎就此结束，主角怀着悲痛的心情慢慢接受了这个事实。直到一次意外，男主发现女警官的言行自相矛盾，联系之前女警官种种错误的判断，一下推断出了真相
——女警官为了维护失手杀人的儿子，铤而走险，主动揽下这个差事来误导主角，试图掩盖儿子的罪行。</li>
<li>解决
发现一切的源头始于女探员有意的误导后，主角立刻联系警方，一同找到了五天前被女警官儿子失手推下悬崖的女儿。女警官和她维护的儿子被关进监狱，接受了法律的制裁。父女也重修旧好，逐渐走出了丧母的阴霾。</li>
</ul></li>

<li><p><strong>Character Brief for the protagonist AND the antagonist</strong></p>

<ul>
<li><p>protagonist</p>

<ul>
<li>He&rsquo;s a Koeran-American who lives in America and has been a single-father for a while. He looks like JayChou. He&rsquo;s a smart guy and has a decent at-home job. He try to be a good father, but he&rsquo;s not sensitive enough to be a .After his wife passed away for cancer, he has some issue with his daughter. However, he doesn&rsquo;t even realize that. His goal is to find her daughter who is missing after the bio study group finished. He has something in common with the officer and he didn&rsquo;t realize that the officer is antagonist until the end.</li>
</ul></li>

<li><p>antagonist</p>

<ul>
<li>the antagonist in this film is very tricky. She pretend to be a helper at the beginning of Searching and the protagonist perceive that in the last few scene. Being overparenting, the officer strive to protect her son from legal punishment. She almost success. She&rsquo;s cruel to the innocent girl who is pushed down the cliff by her son.</li>
</ul></li>
</ul></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>GameStoryWeek3</title>
            <link>https://eterlan.github.io/posts/2019/06/gamestoryweek3/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/gamestoryweek3/</guid>
            <description>Review About Idea Sheets In the previous lectures, we discussed creating Idea Sheets to generate ideas and thoughts on various aspects of your game story. These lists are for you to freestyle brainstorm thoughts onto paper to commit them to words, without judgement or hesitation. The concept is to allow yourself free-form creativity and just throw these ideas, however useful they may end up being, down on paper. As you may recall, the Idea Sheets I recommend are for the following:</description>
            <content type="html"><![CDATA[

<h1 id="review">Review</h1>

<h2 id="about-idea-sheets">About Idea Sheets</h2>

<p>In the previous lectures, we discussed creating Idea Sheets to generate ideas and thoughts on various aspects of your game story. These lists are for you to freestyle brainstorm thoughts onto paper to commit them to words, without judgement or hesitation. The concept is to allow yourself free-form creativity and just throw these ideas, however useful they may end up being, down on paper. As you may recall, the Idea Sheets I recommend are for the following:</p>

<ol>
<li><p>Game Goals Idea Sheet - The hero’s quest in the game</p></li>

<li><p>Protagonist Idea Sheet - How the hero feels about his goals, developing wider character goals</p></li>

<li><p>Antagonist Idea Sheet - Goals and motivations for the antagonist</p></li>

<li><p>Settings and Levels Idea Sheet - Settings and environments where the story takes place.</p></li>
</ol>

<p>Once you have these ideas scribbled out, you can begin to formulate connections between them and sculpt them into clearer descriptions and cohesive designs.</p>

<p>In the following examples, I&rsquo;ve presented two of the Idea Sheets I generated by hand while I was thinking The Shooter. The first is for the antagonist, Dead-Eye Jane. The second is for the locations and settings of the game and how they could be game levels. I have typed them up without editing them for legibility, but I do suggest that you write them out by hand when creating them.</p>

<p>As you read these, <strong>keep in mind only a handful of these ideas end up being used</strong> in the game and character descriptions. And that is what this is all about! Most of them are thrown away in the end, but the ones that stick can be essential to the characters and the world of the game. I have highlighted the ideas on these sheets that I want to use moving forward in the game creation.</p>

<h2 id="review-story-synopses">Review: Story Synopses</h2>

<p>In Week 2, we saw an example of a StarCraft II: Wings of Liberty story synopsis. For a refresher, click here.</p>

<p>Remember that we want to hit all 8 points in a synopsis, though they do not need to be in order.</p>

<ol>
<li><p>Where are we; where/when does the story take place?</p></li>

<li><p>Who are we following along in the story (the protagonist) and why them?</p></li>

<li><p>Who or what force is opposed to the hero (the antagonist) and why are they in opposition?</p></li>

<li><p>What do these characters want to accomplish; what is at stake for them?</p></li>

<li><p>What is the ensuing conflict and why does it exist?</p></li>

<li><p>How does the action rise; how do things get more tense?</p></li>

<li><p>What is the final crisis and how does it play out?</p></li>

<li><p>How do things resolve and wrap up?</p></li>
</ol>

<h2 id="review-character-briefs">Review: Character Briefs</h2>

<p>As we learned in Week 2, the following six points can guide you through the process of writing detailed Character Briefs:</p>

<ol>
<li><p>Who is he/she? Are they a primary or secondary character and how do they relate to the game story?</p></li>

<li><p>What do they look like? What important items might they wear or carry with them?</p></li>

<li><p>What is their personality like and how does that personality help fulfill their role in the game story?</p></li>

<li><p>How do they relate to other characters in the game?</p></li>

<li><p>What are their strengths and weaknesses, and how can that affect the game story?</p></li>

<li><p>What are the motivating character goals for this character?</p></li>
</ol>

<p>Using what we have learned so far, let&rsquo;s examine the following Character Briefs for The Shooter to see if they hit all of the major points.</p>

<h1 id="instruction">Instruction</h1>

<p>We’re still in practice mode, but now it’s your turn. Here we invite you to reimagine The Shooter as a different story and push it towards a different game altogether.</p>

<h2 id="review-criteria">Review criteria</h2>

<p>This is a required, graded assignment, as well as very good practice! Three of your peers will assign you a grade on your submission based on the following criteria:</p>

<ul>
<li>Did you submit all the components required for this assignment? (4pts)</li>
<li>Does the student’s Synopsis hit all 8 points clearly? Does the Synopsis make sense and give you a good idea of what is happening? (2pts)</li>
<li>Does the Character Brief for the protagonist hit all 6 points? Can your peers connect with this character? (2pts)</li>
<li>Does the Character Brief for the antagonist hit all 6 points? Do you find this character compelling as the student described them? (2pts)</li>
<li>Does the Setting Description adequately explain where the primary action takes place, and how the character will move through those locations? (2pts)</li>
</ul>

<p>Spelling, grammar and specific word counts will not factor into the grade, but do consider how effectively you are communicating your story to your peers.</p>

<h2 id="instructions">Instructions</h2>

<p>In this assignment you are asked to try reimagining The Shooter differently than how I’ve presented it in this class.</p>

<p>If you didn’t already try it, use the Idea Sheets method to pull together some rough ideas for the quest, protagonist goals, antagonist goals and settings stemming from this undeveloped spine: <strong>TheShooter is about a man who is out to show everyone that he’s the best shot in the world.</strong>
 Next, assemble some of your best ideas to write:</p>

<ol>
<li>OPTIONAL: the Spine (logline) of your version of The Shooter.</li>
<li>The Story Synopsis of your version of The Shooter (200-400 words). Try to hit all 8 points of a good synopsis.</li>
<li>A Character Brief for the protagonist AND the antagonist (100-300 words each). Try to hit all 6 points of what makes a good character description in each brief.</li>
<li>Setting Descriptions (100-300 words) that outlines the major locations/levels (2-3 maximum) and how a character would travel from place to place.</li>
</ol>

<p>Finally, to give your peers some context, include a short statement about your approach to The Shooter. How is it different, and why?</p>

<p>Write all five components (Synopsis, two Character Briefs, Setting Descriptions, and statement) directly in each submission window. The spine is optional in this assignment.</p>

<p>Give your project a title (a new game title, if you wish), and submit!</p>

<h2 id="tips-for-completion">Tips for Completion</h2>

<p>Using The Shooter is a limitation, but there is still plenty you can do within those limitations! Some suggestions for changing The Shooter storyline include:</p>

<ul>
<li>New wider character goals and history for Jake and/or Dead-Eye Jane;</li>
<li>Different settings, or a different type of competition circuit, not necessarily based on shooting;</li>
<li>A different antagonist character for Jake than Dead-Eye Jane; or</li>
<li>Swap Jake and Dead-Eye Jane’s roles as protagonist and antagonist.
<br /></li>
</ul>

<p>Also, though it’s clearer to present your assignment starting with the spine, in drafting your assignment <strong>it’s best to start writing the Character Briefs and Setting Descriptions first</strong> (based on the ideas from your Idea Sheets), then craft your Synopsis and Spine.*Just like play testing, peer feedback can greatly improve anyone’s writing. Likewise, looking at and providing feedback on your peers’ writing will help tremendously in your own work as a game designer. When you’re reviewing someone’s project, please grade generously and give thoughtful and constructive criticism. The goal here is to help your peer move forward and succeed in their work.</p>
]]></content>
        </item>
        
        <item>
            <title>Jane and Jack</title>
            <link>https://eterlan.github.io/posts/2019/06/jane-and-jack/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/jane-and-jack/</guid>
            <description>Jane and Jack some thinking&amp;hellip;before the writing  no bad guys, think they have to do that. why you have to do that? robbory?killing is too much. why you have to do that? all about crime? something not allowed? illegel? thief. that&amp;rsquo;s bit better. what ? all crime? what about not moral ? that&amp;rsquo;s a lot better. why it always havr to be wrong? what about some unfortunate? or good=&amp;gt;bad=&amp;gt;good?</description>
            <content type="html"><![CDATA[

<h1 id="jane-and-jack">Jane and Jack</h1>

<h3 id="some-thinking-before-the-writing">some thinking&hellip;before the writing</h3>

<ul>
<li>no bad guys, think they have to do that. why you have to do that? robbory?killing is too much. why you have to do that? all about crime? something not allowed? illegel? thief. that&rsquo;s bit better. what ? all crime? what about not moral ? that&rsquo;s a lot better. why it always havr to be wrong? what about some unfortunate? or good=&gt;bad=&gt;good? something has to be turned. what ? is it has to be conflict? mightbe . Ihave some idea.</li>
<li>About family conflict. Husband and commanding wife finally know each other after bankrupt.</li>
</ul>

<h3 id="jane-is-a-primary-school-teacher-she-is-a-strict-teacher-teaching-chinese">Jane is a primary school teacher. She is a strict teacher, teaching Chinese.</h3>

<ul>
<li>How&rsquo;s she looks like?

<ul>
<li>You can&rsquo;t tell she&rsquo;s pretty. black hair, simple make-up, without much accessary.</li>
<li>she&rsquo;s full of energy. she likes this job, she think teaching is meaningful,</li>
<li>While earn much money is not.</li>
</ul></li>
<li>How&rsquo;s she communicate with others?

<ul>
<li>she&rsquo;s speaking was clear and , knowledgeable.</li>
<li>she talks  like a computer command - always commanding while she  doesn&rsquo;t realize. You know, children talks much, be patient doesn&rsquo;t work.</li>
</ul></li>
<li>What&rsquo;s her doing?

<ul>
<li>She&rsquo;s young, amatuer on teaching.  Though she has not much experience and strict somehow, children like her.</li>
</ul></li>
<li>What&rsquo;s her goal?

<ul>
<li>turn his husband into a well-educated husband, because she is. She has a master degree in South China Normal University. she also has a pure accent of American English.</li>
<li>their realationship now is not really good. The reason might be they have no common, in her view.</li>
</ul></li>
<li>What&rsquo;s her really want?

<ul>
<li>good communicate family. no conflict, no cheat. like what old-timer do in ancient China.</li>
</ul></li>
</ul>

<h3 id="jack-is-a-bussiness-man-quite-wealthy">Jack is a bussiness man. quite wealthy.</h3>

<ul>
<li>what&rsquo;s his desire?

<ul>
<li>he want a knowledge wife AND support him, without too much complain,</li>
</ul></li>
<li>how does he look like?

<ul>
<li>he&rsquo;s easy-going, wear decent shirt, comb a nice hair every morning. He gives other a calm and confidence feeling.</li>
</ul></li>
<li>what&rsquo;s his doing?

<ul>
<li>he&rsquo;s also gangbiziyong stobben. He&rsquo;s a leader, thought his quite open however he&rsquo;s the man who control everything, onhold everything, make the decision and go risk.</li>
</ul></li>
<li>how does he communicate?

<ul>
<li>he EQ is high.</li>
<li>he talks in a soomthing way while listener feel like soothing in the beach.</li>
</ul></li>
<li>What behind his goal?

<ul>
<li>he has a bachlor degree, he&rsquo;s not a guy.</li>
<li>he reads, just some HOWTOSUCCESS books, you know.</li>
<li>he think wife should listen to husband.</li>
<li>But also wife should have some knowledge, it&rsquo;s cool, which show his better.</li>
</ul></li>
</ul>

<h3 id="synponosis-of-jack-and-jane">Synponosis of Jack and Jane</h3>

<ul>
<li>In China ,there is a a beloved couple. Jack and Jane, they know each other through their parents, neighbourhood, known well each other.</li>
<li>At first everything just go fine, they go bali island for honeymoon and has a really good time. Jack is a handsome and susscessful bussiness man, he appreciate that kind of traditional woman who has some knowledge and most important point is reliance - Jane is, at the first glance he knows that girl is his dream girl.</li>
<li>They came back and live together. Then Jack found something wrong. Jane is that Jane, traditional, knowledge, pretty accent, at the same time she is unbelieveable shuojiaode. she&rsquo;s talktive especially when she show her knowledge, in Jack&rsquo;s view, it&rsquo;s totally show off and also insulting!</li>
<li>You know, Jack is a leader, a Boss, he definitely hate this. I&rsquo;m not a barchild you taught, he thought.</li>
<li>Jane doesn&rsquo;t has a good time either. Jack is a nice husbend, rich and handsome, easy to go with. It&rsquo;s no way to pick any disxxx of him. If you really want to pick one, maybe it&rsquo;s his reading habbit . He love those HOWTOSUCCESS books. he&rsquo;s not so busy in his company, which Jane knows clearly. He just read those books one by one, even at bed time. In Jane&rsquo;s mind, those are just gubbish and totally worthless. She thought, you are successful, wealthy, why you still purchase it ?</li>
<li>Times pass, things worse.They don&rsquo;t actually argue everyday, not even show their discomfort on face, they just doing their own stuff without a word.</li>
<li>3 months, they divorce, without heart-break and all in a peace. Although their parents and relatives, college all show their uncomprehension and pity for it, Jack and Jane know, live alone, without tolerate with each other, they are now happy now.</li>
<li>After all, most of those who show pitys don&rsquo;t has a resonance family,then, why should we live with other guy regardless the hormone&rsquo;s plot which has a sacred name love?</li>
</ul>

<h3 id="setting">Setting</h3>

<ul>
<li>1. bali island

<ul>
<li>There are a beloved couple play on the beach,</li>
</ul></li>
<li>2. living room.

<ul>
<li>Jack sit in a big confortable sofa reading his books. Jane do with her homework, preparing for lessons on tomorrow morning .Only the tireless clock click-click on the wall.</li>
</ul></li>
<li>3. after divorce

<ul>
<li>two pic combine to one.l eft is Jane, right is Jack, a path to the different side. A few people around them show their pity.</li>
</ul></li>
</ul>

<h3 id="some-context">some context</h3>

<ul>
<li>It&rsquo;s totally run away from the initial bankrupt plot for the reason I think it&rsquo;s cliche and boring also inconvincible.</li>
<li>When the professors teaching thses technic(yes I have already taught how to write creatively before), I was wondering, is this really should added? These hero, protagonist - we called itenemies, conflict, and finally solution, is everything we have to put in the writing? I really chewed upon it for long time, before taking this class, actually is when I thought what makes a good game. And finally I found the answer might be no, partly. admittly, There are a lots of defeating game about how to defeat enemies, how to craft weapon, improve combat skills.However, there are also many great game e.g. for examples, like EdithFinch, To the moon. Beyond the concept that bad guys all think they have reasonable and compelling reason to do a crime, do we really need a bad guy in our story? For my view, I&rsquo;m tired of Hollywood-Super-Hero movies and Killing-Shooting that kind of stuffs. Maybe it&rsquo;s about age, maybe just my issue, but I know there are plenty of player also tired of these. That&rsquo;s the reason why I write this tiny story.</li>
<li>By the way, I&rsquo;m not showing disrespect to the professor. He is nice, his techinic about how to write, it really helps me write something, think deeper, and delve into the writing, I appreciate that.</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>My favourite Game - The Last of Us</title>
            <link>https://eterlan.github.io/posts/2019/06/my-favourite-game-the-last-of-us/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/my-favourite-game-the-last-of-us/</guid>
            <description>World Design for Video Game - Week 1 Knowing what you like is a good thing. The point of this reflective assignment is to isolate and analyze the aspects of a game world that keep you playing and interested in the game.
To begin, pick one game (not a game series–just one game!) you feel strongly about. Use the title of the game as your project title. To help your peers, please include a reference URL to your game–a Wiki, an image, or the game itself.</description>
            <content type="html"><![CDATA[

<p><img src="/TLoU-Ellie-Header.jpg" alt="" /></p>

<h1 id="world-design-for-video-game-week-1">World Design for Video Game - Week 1</h1>

<p><em>Knowing what you like is a good thing. The point of this reflective assignment is to isolate and analyze the aspects of a game world that keep you playing and interested in the game.</em></p>

<p>To begin, pick one game (not a game series–just one game!) you feel strongly about. Use the title of the game as your project title. To help your peers, please include a reference URL to your game–a Wiki, an image, or the game itself.</p>

<p>Then, please answer the following three questions:</p>

<ol>
<li>Describe your game. Why do you find the game compelling?</li>
<li>What defines your world? Tell your peers what makes your game world unique.</li>
<li>How does the environment of the game affect the game play?</li>
</ol>

<h3 id="review-criterialess">Review criterialess</h3>

<ul>
<li>Did you upload all the required components of the assignment (reference link to game and three responses)? (4 pts)</li>
<li>Did you define at least one property of your game world? (2 pts)</li>
<li>Did you identify how the environment of the game affects the game play? (2 pts)</li>
</ul>

<h3 id="tips-for-completionless">Tips for Completionless</h3>

<p>For the question that asks why do you find the game compelling, ask yourself:</p>

<ul>
<li>Why do you like to play in this world?</li>
<li>Do you like being in that world?</li>
<li>What is it you find appealing or fun about this world? Is it the visuals, the story, the characters, or something else?</li>
</ul>

<p>To define your world, use any of these prompts to craft your answer:</p>

<ul>
<li>Is your world constrained with boundaries (ie. with walls or fences) or does it infinitely expand?</li>
<li>Does the game world resemble a real-life environment or is it completely constructed?</li>
<li>If your world is completely unique what defines it? Think technology, culture, society, religion, etc…</li>
<li>If it resembles reality, is it contemporary or historical?</li>
</ul>

<h1 id="the-last-of-us">The Last of Us</h1>

<p><a href="https://en.wikipedia.org/wiki/The_Last_of_Us" target="_blank">The Last of Us - Wikipedia</a></p>

<p><img src="https://upload.wikimedia.org/wikipedia/en/4/46/Video_Game_Cover_-_The_Last_of_Us.jpg" alt="" /></p>

<h3 id="why-do-you-find-the-game-compelling">Why do you find the game compelling?</h3>

<p>There are many games impressed me, each one is respectful and honorable, such us This War of Mine, The Legend of Sword and Fairy 4, Heroes of Might and Magic Online 3, Steins;Gate, What Remains of Edith Finch, and so on. However, if you want me to choose the best one, I would say it&rsquo;s The Last of Us. As you know, there are many survive in apocalyptic world game which full of zombies and the only goal is to keep yourself alive. And that&rsquo;s the greatness point of The Last of Us. It focus on the humanity and the relationship between survivors in endworld which is an unfamiliar experience for most of us - living in safe world, repeat mundane daily life, not need to worry about food or zombies, and, which is most important, we are detached from each other. To relie and take responsible for each other, conquering each difficulties in this world, is what The Last of Us wants each player to experience.</p>

<h3 id="what-defines-your-world-tell-your-peers-what-makes-your-game-world-unique">What defines your world? Tell your peers what makes your game world unique.</h3>

<p>Three main forces in this destructed world, Fireflies, a rebel militia, quarantine zone authorities, and zombies everywhere outside the quarantine zones.</p>

<h3 id="how-does-the-environment-of-the-game-affect-the-game-play">How does the environment of the game affect the game play?</h3>

<p>Civilization is destroyed by the infection. Survivors live in the quarantine zones, restrict by the authorities. It&rsquo;s hard to do anything outside but they protagonist have to make it. Ellie is bite by zombie but not infected, which miracle make her the savior for human. Actually Joel, controlled by player, is the protector of Ellie, so the savior would be both of them. After all that happen, the name of this game reveals it&rsquo;s meaning, truly striking.</p>
]]></content>
        </item>
        
        <item>
            <title>Regex Note</title>
            <link>https://eterlan.github.io/posts/2019/06/regex-note/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/regex-note/</guid>
            <description>Regular Expression,正则表达式.历史悠久,其下又分了诸派,大同小异.今天便介绍其中最好上手的PCRE2一派. 表面都是些平常多见的字母与符号,暗地却尽是些叛徒. 主要分为:
 字母里有几个能偷偷叛变的的间谍,它们大同小异,都是匹配一些空白处的.
 \n换行 \s所有空格 \S所有非空格 \r回车  符号这边也有几个间谍,它们其中又分两个派别
 四眼仔 代表位置  ^ 我近视&amp;hellip;这一串什么玩意儿啊,我就看到了第一个. $ 我远视&amp;hellip;这一串玩意儿我就看到了最后一个.   吃货代表数量  暴食  * 我的胃口从0到无限大! + 我的胃口从1到无限大!  有节制  ? 瞧瞧你们那样儿!丢不丢人呐,我最多吃一个 ? 不仅不贪吃,还不许别人贪吃.只要它跟在另外两个暴食者后面,就会起到监督的作用,让两人见好就好. {2}俺们东北人只吃两个馒头~少了我不干~依阿伊阿伊啊~~~ {2,}窝得广东银,最少要次两过啦! {2,3}二三之间~天昏地暗~    然后就是括号啦,尽是些大佬
 ()小括号是间谍头子,要罩住自己人.括号里的兄弟我们风雨同舟!一起玩贪玩蓝月! []中括号是  最后一个 \ 它是世外高人,能帮助间谍背叛阵营,或者帮叛徒重回阵营
  </description>
            <content type="html"><![CDATA[<p>Regular Expression,正则表达式.历史悠久,其下又分了诸派,大同小异.今天便介绍其中最好上手的PCRE2一派.
表面都是些平常多见的字母与符号,暗地却尽是些叛徒.
主要分为:</p>

<ul>
<li><p>字母里有几个能偷偷叛变的的间谍,它们大同小异,都是匹配一些空白处的.</p>

<ul>
<li>\n换行</li>
<li>\s所有空格</li>
<li>\S所有非空格</li>
<li>\r回车</li>
</ul></li>

<li><p>符号这边也有几个间谍,它们其中又分两个派别</p>

<ul>
<li>四眼仔 代表位置

<ul>
<li>^ 我近视&hellip;这一串什么玩意儿啊,我就看到了第一个.</li>
<li>$ 我远视&hellip;这一串玩意儿我就看到了最后一个.</li>
<li></li>
</ul></li>
<li>吃货代表数量

<ul>
<li>暴食

<ul>
<li>* 我的胃口从0到无限大!</li>
<li>+ 我的胃口从1到无限大!</li>
</ul></li>
<li>有节制

<ul>
<li>? 瞧瞧你们那样儿!丢不丢人呐,我最多吃一个</li>
<li>? 不仅不贪吃,还不许别人贪吃.只要它跟在另外两个暴食者后面,就会起到监督的作用,让两人见好就好.</li>
<li>{2}俺们东北人只吃两个馒头<del>~少了我不干</del>~依阿伊阿伊啊~~~</li>
<li>{2,}窝得广东银,最少要次两过啦!</li>
<li>{2,3}二三之间~天昏地暗~</li>
</ul></li>
</ul></li>
</ul></li>

<li><p>然后就是括号啦,尽是些大佬</p>

<ul>
<li>()小括号是间谍头子,要罩住自己人.括号里的兄弟我们风雨同舟!一起玩贪玩蓝月!</li>
<li>[]中括号是</li>
</ul></li>

<li><p>最后一个 \ 它是世外高人,能帮助间谍背叛阵营,或者帮叛徒重回阵营</p></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Test behavior of nested struct in Unity ECS</title>
            <link>https://eterlan.github.io/posts/2019/06/test-behavior-of-nested-struct-in-unity-ecs/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/test-behavior-of-nested-struct-in-unity-ecs/</guid>
            <description>Official ForEach test -&amp;gt; Unity.Entities.Tests/ForEach/ForEachGeneralTests.cs
Nested Struct Test using NUnit.Framework;[TestFixture] public class UpdateNestedStructTests : ECSTestsFixture {[Test] public void _0_Update_Normal_Var() { var entity = m_Manager.CreateEntity(typeof(T)); World.GetOrCreateSystem&amp;lt;UpdateNestedStruct&amp;gt;().Update(); var target = m_Manager.GetComponentData&amp;lt;T&amp;gt;(entity).forTest; Assert.AreEqual(1,target); }[Test] public void _1_Update_Nested_Struct() { var entity = m_Manager.CreateEntity(typeof(T)); World.GetOrCreateSystem&amp;lt;UpdateNestedStruct&amp;gt;().Update(); var target = m_Manager.GetComponentData&amp;lt;T&amp;gt;(entity).point.X; Assert.AreEqual(1,target); } } UpdateBufferVar Test using NUnit.Framework;[TestFixture] public class UpdateBufferVarTest : ECSTestsFixture {[Test] public void _0_Update_One_Var() { var entity = m_Manager.CreateEntity(typeof(U)); World.GetOrCreateSystem&amp;lt;UpdateBufferWithMultipleElement&amp;gt;().Update(); var target = m_Manager.</description>
            <content type="html"><![CDATA[

<p>Official ForEach test -&gt; Unity.Entities.Tests/ForEach/ForEachGeneralTests.cs</p>

<h3 id="nested-struct-test">Nested Struct Test</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> NUnit.Framework;<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">[TestFixture]</span>
<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateNestedStructTests</span> : ECSTestsFixture
{<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _0_Update_Normal_Var()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(T));

        World.GetOrCreateSystem&lt;UpdateNestedStruct&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetComponentData&lt;T&gt;(entity).forTest;
        Assert.AreEqual(<span style="color:#ae81ff">1</span>,target);
    }<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _1_Update_Nested_Struct()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(T));
        
        World.GetOrCreateSystem&lt;UpdateNestedStruct&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetComponentData&lt;T&gt;(entity).point.X;
        Assert.AreEqual(<span style="color:#ae81ff">1</span>,target);
    }
}</code></pre></div>
<h3 id="updatebuffervar-test">UpdateBufferVar Test</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> NUnit.Framework;<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">[TestFixture]</span>
<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateBufferVarTest</span> : ECSTestsFixture
{<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _0_Update_One_Var()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(U));

        World.GetOrCreateSystem&lt;UpdateBufferWithMultipleElement&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetBuffer&lt;U&gt;(entity)<span style="color:#a6e22e">[0]</span>.Var1;
        Assert.AreEqual(<span style="color:#ae81ff">1</span>, target);
    }<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _1_Update_Second_Var()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(U));

        World.GetOrCreateSystem&lt;UpdateBufferWithMultipleElement&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetBuffer&lt;U&gt;(entity)<span style="color:#a6e22e">[0]</span>.Var2;
        Assert.AreEqual(<span style="color:#ae81ff">2</span>,target);
    }<span style="color:#a6e22e">
</span><span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [Test]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> _2_Modify_Existing_Element()
    {
        <span style="color:#66d9ef">var</span> entity = m_Manager.CreateEntity(<span style="color:#66d9ef">typeof</span>(U));
        World.GetOrCreateSystem&lt;ModifyExistingElement&gt;().Update();
        <span style="color:#66d9ef">var</span> target = m_Manager.GetBuffer&lt;U&gt;(entity)<span style="color:#a6e22e">[0]</span>.Var2;
        Assert.AreEqual(<span style="color:#ae81ff">2</span>,target);
    }
}</code></pre></div>
<h3 id="system">System</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">using</span> Unity.Entities;

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateNestedStruct</span> : ComponentSystem
{
    <span style="color:#66d9ef">protected</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> OnUpdate()
    {
        Entities.ForEach((<span style="color:#66d9ef">ref</span> T t) =&gt;
        {
            t.point.X += <span style="color:#ae81ff">1</span>;
            t.forTest += <span style="color:#ae81ff">1</span>;            
        });
    }
}
<span style="color:#75715e">/// &lt;summary&gt;
</span><span style="color:#75715e">/// How to Iterate Buffer? Can buffer contain more than one variables?
</span><span style="color:#75715e">/// &lt;/summary&gt;
</span><span style="color:#75715e"></span><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">UpdateBufferWithMultipleElement</span> : ComponentSystem
{
    <span style="color:#66d9ef">protected</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> OnUpdate()
    {
        Entities.ForEach ((DynamicBuffer&lt;U&gt; u)=&gt;
        {
            <span style="color:#66d9ef">var</span> element = <span style="color:#66d9ef">new</span> U { Var1 = <span style="color:#ae81ff">1</span>,Var2 = <span style="color:#ae81ff">2</span>};
            u.Add(element);
        });
    }
}

<span style="color:#75715e">/// &lt;summary&gt;
</span><span style="color:#75715e">/// How to modify existing element?
</span><span style="color:#75715e">/// &lt;/summary&gt;
</span><span style="color:#75715e"></span><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">ModifyExistingElement</span> : ComponentSystem
{
    <span style="color:#66d9ef">protected</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> OnUpdate()
    {
        Entities.ForEach((DynamicBuffer&lt;U&gt; u) =&gt;
        {
            <span style="color:#66d9ef">var</span> element = <span style="color:#66d9ef">new</span> U {Var2 = <span style="color:#ae81ff">1</span>};
            u.Add(element);
            <span style="color:#66d9ef">var</span> temp = u<span style="color:#a6e22e">[0]</span>;
            temp.Var2 += <span style="color:#ae81ff">1</span>;
            u<span style="color:#a6e22e">[0]</span> = temp;
            
            <span style="color:#75715e">// THIS DOESN&#39;T WORK
</span><span style="color:#75715e"></span>            <span style="color:#75715e">// u[0].Var1 = 2;
</span><span style="color:#75715e"></span>        });
    }
}</code></pre></div>
<p>​</p>

<h3 id="conclusion">Conclusion</h3>

<ol>
<li><p>Nested struct can be simply modify without further operation.</p></li>

<li><p>Buffer element can contains more than one variables.</p></li>

<li><p>Buffer iteration in ComponentSystem is different from Component iteration</p></li>
</ol>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">Entities.ForEach((<span style="color:#66d9ef">ref</span> Foo foo)=&gt;{}); <span style="color:#75715e">// iterate component
</span><span style="color:#75715e"></span>
Entities.ForEach((DynamicBuffer&lt;Fooo&gt; fooo)=&gt;{}); // iterate buffer</code></pre></div>
<ol>
<li>Buffer has no syntax sugar as nested struct, so I should modify it carefully.</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>剑三往事</title>
            <link>https://eterlan.github.io/posts/2019/06/%E5%89%91%E4%B8%89%E5%BE%80%E4%BA%8B/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/%E5%89%91%E4%B8%89%E5%BE%80%E4%BA%8B/</guid>
            <description>一闭上眼，六年前的事历历在目，仿佛就发生在不久之前。实在是太可怕了，我不得不起身写下这些文字，以求丝毫慰藉。我记得，为了情缘抛弃的帮派，这个由师父一手建立，创立伊始我便参与其中的帮派。帮派最后的覆灭如摧枯拉朽，元老们的心血被付之一炬。我记得，欠下师姐的大扇子，让我一直无颜面对她。我记得一直为我出谋划策的亦风，A的时候我甚至没有前去合影。我记得因为贪玩，没有去挽回的前情缘。我记得我贪图技术，臭不要脸的拜了一个又一个万花师父。我记得一直陪我成长的师父，听到我队伍里不是在常跟你提起的她，错愕却又试图掩饰的语气。我记得师父不辞辛劳，一个boos一个boss讲解，我却转头去打pvp，真的十分抱歉，如果再来一次我想说去tm的pvp，有时间一定多陪陪你。
我记得荻花的太多太多，我记得每一个陪我刷笛子的朋友，我记得慕容追风的语气语调。。&amp;rdquo;原来是些故人。&amp;rdquo;
六年啊，如弹指之间，令人难以置信。我对不起很多人，我为我的自私和狭隘向你们道歉，我为每次不辞而别感到羞愧。我深深的感受到我是有罪的。不然为何每个曾关心过我的人都离我而去？旧日那些欢乐的时光与今日的形单只影形成了鲜明的对比，这不过是咎由自取罢了。台上炙烈的聚光灯打在我身上。电影早已散场，我却徒留原地。我想念你们，但又期盼你们能别像我一样，戴上往日的镣铐，难以挣脱。忘却吧，往事如云烟，时光不可辜负。我因过去的傲慢与愚蠢而无法向你们传达歉意与祝福，但我想一个人默默地祝福你们，衷心的祝福你们。</description>
            <content type="html"><![CDATA[<p>一闭上眼，六年前的事历历在目，仿佛就发生在不久之前。实在是太可怕了，我不得不起身写下这些文字，以求丝毫慰藉。我记得，为了情缘抛弃的帮派，这个由师父一手建立，创立伊始我便参与其中的帮派。帮派最后的覆灭如摧枯拉朽，元老们的心血被付之一炬。我记得，欠下师姐的大扇子，让我一直无颜面对她。我记得一直为我出谋划策的亦风，A的时候我甚至没有前去合影。我记得因为贪玩，没有去挽回的前情缘。我记得我贪图技术，臭不要脸的拜了一个又一个万花师父。我记得一直陪我成长的师父，听到我队伍里不是在常跟你提起的她，错愕却又试图掩饰的语气。我记得师父不辞辛劳，一个boos一个boss讲解，我却转头去打pvp，真的十分抱歉，如果再来一次我想说去tm的pvp，有时间一定多陪陪你。</p>

<p>我记得荻花的太多太多，我记得每一个陪我刷笛子的朋友，我记得慕容追风的语气语调。。&rdquo;原来是些故人。&rdquo;</p>

<p>六年啊，如弹指之间，令人难以置信。我对不起很多人，我为我的自私和狭隘向你们道歉，我为每次不辞而别感到羞愧。我深深的感受到我是有罪的。不然为何每个曾关心过我的人都离我而去？旧日那些欢乐的时光与今日的形单只影形成了鲜明的对比，这不过是咎由自取罢了。台上炙烈的聚光灯打在我身上。电影早已散场，我却徒留原地。我想念你们，但又期盼你们能别像我一样，戴上往日的镣铐，难以挣脱。忘却吧，往事如云烟，时光不可辜负。我因过去的傲慢与愚蠢而无法向你们传达歉意与祝福，但我想一个人默默地祝福你们，衷心的祝福你们。</p>
]]></content>
        </item>
        
        <item>
            <title>如何使用Unity ECS打造Reactive System？</title>
            <link>https://eterlan.github.io/posts/2019/06/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8unity-ecs%E6%89%93%E9%80%A0reactive-system/</link>
            <pubDate>Wed, 19 Jun 2019 14:40:12 +0800</pubDate>
            
            <guid>https://eterlan.github.io/posts/2019/06/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8unity-ecs%E6%89%93%E9%80%A0reactive-system/</guid>
            <description>结构变化 所谓结构变化，即是Entity添加删除Component，诸如此类。追踪办法有两种。
1. 使用SystemStateComponent 原理 所谓State，含义是只能被手动删除的Component，在删除Entity后，依然留下做一些殿后工作，只有被指名要求删除的时候才会被删除。这种特性就让我们可以通过不同的Query去获得结构变化的消息。
栗子  假设我们有一个Entity，身上有两个组件，A：IComponentData 与 B: ISystemStateComponentData 当我们添加A组件的时候，通过Filter{ 有A无B }，我们可以在别处得知这个Entity何时被添加。在添加后手动加入B组件。 当我们删除Entity，或者移除A组件的时候，通过Filter { 有B无A }，同理可得知何时这个Entity被移除或是A组件被移除。  更具体的实现可以在查看官方对于ParentSystem的设计。
2. 查询ComponentVersion 每当出现某Component相关的结构性变化的时候，该Component的版本就会+1 。
EntityManager.GetComponentVersion() 数据变化 顾名思义。方法有三种。
1. Chunk检查 原理  GlobalSystemVersion为记录一个世界所有系统更新信息的版本号。在每一个系统更新之前，GSV++。 LastSystemVersion为系统记录自己的版本号。在某系统更新之后，它会保存GSV，含义是上次运行时的版本号，直到下次某系统更新之后，它的版本号不会更改 每一种Component，在System申请写入权限的时候，都会记录该System的LSV 获取方式为chunk.GetArch  因此，if ( ComponentVer &amp;gt; LSV ) 说明该Component被修改了（有系统获得了写入权限）。而之所以不用考虑等于，是因为除非只有1个系统，不然是不会有等于的情况的，不能理解的话可以画图思考一下。
注意这个信息时效性只有一帧，从上次该系统更新后到这次更新后的一帧，因此在这次更新中，修改Component后查询是否改变，答案是True，反之为False。
举例  系统的更新顺序为A-&amp;gt;B-&amp;gt;C-&amp;gt;A 那么GSV ：0 -&amp;gt; 1 -&amp;gt; 2 -&amp;gt; 3，每个系统更新之前+1 当数据在B系统被写入，Component就记住了B的GSV = 1 当我们在第二次轮到A系统的时候监测是否Component被改动，DidChange自动使用A系统上次的GSV记录 LSV = 0 与 Component记录的信息CV = 1做对比，发现CV &amp;gt; LSV，得知信息已经被更改了，返回True。  API chunk.</description>
            <content type="html"><![CDATA[

<h2 id="结构变化">结构变化</h2>

<p>所谓结构变化，即是Entity添加删除Component，诸如此类。追踪办法有两种。</p>

<h3 id="1-使用systemstatecomponent">1. 使用SystemStateComponent</h3>

<h4 id="原理">原理</h4>

<p>所谓State，含义是只能被手动删除的Component，在删除Entity后，依然留下做一些殿后工作，只有被指名要求删除的时候才会被删除。这种特性就让我们可以通过不同的Query去获得结构变化的消息。</p>

<h4 id="栗子">栗子</h4>

<ol>
<li>假设我们有一个Entity，身上有两个组件，A：IComponentData 与 B: ISystemStateComponentData</li>
<li>当我们添加A组件的时候，通过Filter{ 有A无B }，我们可以在别处得知这个Entity何时被添加。在添加后手动加入B组件。</li>
<li>当我们删除Entity，或者移除A组件的时候，通过Filter { 有B无A }，同理可得知何时这个Entity被移除或是A组件被移除。</li>
</ol>

<p>更具体的实现可以在查看官方对于ParentSystem的设计。</p>

<h3 id="2-查询componentversion">2. 查询ComponentVersion</h3>

<p>每当出现某Component相关的结构性变化的时候，该Component的版本就会+1 。</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">EntityManager.GetComponentVersion()</code></pre></div>
<h2 id="数据变化">数据变化</h2>

<p>顾名思义。方法有三种。</p>

<h3 id="1-chunk检查">1. Chunk检查</h3>

<h4 id="原理-1">原理</h4>

<ol>
<li>GlobalSystemVersion为记录一个世界所有系统更新信息的版本号。在每一个系统更新<strong>之前</strong>，GSV++。</li>
<li>LastSystemVersion为系统记录自己的版本号。在某系统更新<strong>之后</strong>，它会保存GSV，含义是<strong>上次</strong>运行时的版本号，直到下次某系统更新之后，它的版本号不会更改</li>
<li>每一种Component，在System申请写入权限的时候，都会记录该System的LSV
获取方式为chunk.GetArch</li>
</ol>

<p>因此，if ( ComponentVer &gt; LSV ) 说明该Component被修改了（有系统获得了写入权限）。而之所以不用考虑等于，是因为除非只有1个系统，不然是不会有等于的情况的，不能理解的话可以画图思考一下。</p>

<p>注意这个信息时效性只有一帧，从上次该系统更新后到这次更新后的一帧，因此在这次更新中，修改Component后查询是否改变，答案是True，反之为False。</p>

<h4 id="举例">举例</h4>

<ol>
<li>系统的更新顺序为A-&gt;B-&gt;C-&gt;A</li>
<li>那么GSV ：0 -&gt; 1 -&gt; 2 -&gt; 3，每个系统更新之前+1</li>
<li>当数据在B系统被写入，Component就记住了B的GSV = 1</li>
<li>当我们在第二次轮到A系统的时候监测是否Component被改动，DidChange自动使用A系统上次的GSV记录 LSV = 0 与 Component记录的信息CV = 1做对比，发现CV &gt; LSV，得知信息已经被更改了，返回True。</li>
</ol>

<h4 id="api">API</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#">chunk.DidChange(InputAType, LastSystemVersion);</code></pre></div>
<p>注意LSV应从EntityManager.LastSystemVersion取得，并传入Job</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#a6e22e">[BurstCompile]</span>
<span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">UpdateJob</span> : IJobChunk
{
   <span style="color:#66d9ef">public</span> ArchetypeChunkComponentType&lt;InputA&gt; InputAType;
   <span style="color:#66d9ef">public</span> ArchetypeChunkComponentType&lt;InputB&gt; InputBType;<span style="color:#a6e22e">
</span><span style="color:#a6e22e">   [ReadOnly]</span> <span style="color:#66d9ef">public</span> ArchetypeChunkComponentType&lt;Output&gt; OutputType;
   <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">uint</span> LastSystemVersion;

   <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> Execute(ArchetypeChunk chunk, <span style="color:#66d9ef">int</span> chunkIndex, <span style="color:#66d9ef">int</span> firstEntityIndex)
   {
       <span style="color:#66d9ef">var</span> inputAChanged = chunk.DidChange(InputAType, LastSystemVersion);
       <span style="color:#66d9ef">var</span> inputBChanged = chunk.DidChange(InputBType, LastSystemVersion);
       <span style="color:#66d9ef">if</span> (!(inputAChanged || inputBChanged))
           <span style="color:#66d9ef">return</span>;
      <span style="color:#75715e">//...
</span><span style="color:#75715e"></span>}</code></pre></div>
<h4 id="2-query自动检查">2. Query自动检查</h4>

<p>在声明Query的时候，特别注明</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">m_Group.SetFilterChanged(<span style="color:#66d9ef">new</span> ComponentType{ <span style="color:#66d9ef">typeof</span>(InputA), <span style="color:#66d9ef">typeof</span>(InputB)});</code></pre></div>
<p>这样Query就会把没被修改的ComponentType排除在外。注意，这种检查是Component层级，而不是单个Entity层级的。</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#">EntityQuery m_Group;
<span style="color:#66d9ef">protected</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> OnCreate()
{
   m_Group = GetEntityQuery(<span style="color:#66d9ef">typeof</span>(Output), 
                               ComponentType.ReadOnly&lt;InputA&gt;(), 
                               ComponentType.ReadOnly&lt;InputB&gt;());
   m_Group.SetFilterChanged(<span style="color:#66d9ef">new</span> ComponentType{ <span style="color:#66d9ef">typeof</span>(InputA), <span style="color:#66d9ef">typeof</span>(InputB)});
}</code></pre></div>
<h3 id="3-ijobforeach中使用-changefilter">3. IJobForEach中使用 [ChangeFilter]</h3>

<p>与Query的排除效果类似。</p>

<h4 id="示例">示例</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c#" data-lang="c#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">ProcessTendency</span> : IJobForEachWithEntity&lt;HumanState, HumanStock&gt;
{
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> Execute(Entity entity, <span style="color:#66d9ef">int</span> index,<span style="color:#a6e22e"> [ChangedFilter]</span> <span style="color:#66d9ef">ref</span> State state)
    {</code></pre></div>
<h2 id="reference">Reference</h2>

<p><a href="https://docs.unity3d.com/Packages/com.unity.entities@0.0/manual/chunk_iteration_job.html" target="_blank">UNITY - ECS Packages</a></p>

<p><a href="https://gametorrahod.com/designing-an-efficient-system-with-version-numbers/" target="_blank">designing-an-efficient-system-with-version-numbers/ - 5argon</a></p>
]]></content>
        </item>
        
    </channel>
</rss>
